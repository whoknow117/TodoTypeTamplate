[{"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\index.tsx":"1","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\App.tsx":"2","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoList.tsx":"3","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\store.ts":"4","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\tasks-reducer.ts":"5","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\todoList-reducer.ts":"6","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoInput\\TodoInput.tsx":"7","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoTask\\TodoTask.tsx":"8"},{"size":289,"mtime":1610655157563,"results":"9","hashOfConfig":"10"},{"size":1920,"mtime":1610832502062,"results":"11","hashOfConfig":"10"},{"size":1363,"mtime":1610832484471,"results":"12","hashOfConfig":"10"},{"size":407,"mtime":1610793434493,"results":"13","hashOfConfig":"10"},{"size":2786,"mtime":1610901120629,"results":"14","hashOfConfig":"10"},{"size":1360,"mtime":1610832809863,"results":"15","hashOfConfig":"10"},{"size":683,"mtime":1610793945967,"results":"16","hashOfConfig":"10"},{"size":887,"mtime":1610832484489,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1e95pwi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\index.tsx",[],["38","39"],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\App.tsx",["40","41","42","43"],"import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\nimport {TodoList} from \"./components/TodoList/TodoList\";\nimport {AppRootStateType} from \"./redux/store\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TaskStateType, TodoListType} from \"./types/types\";\nimport {ChangeTodoListTitleAC, AddTodoListAC} from \"./redux/todoList-reducer\";\nimport {v1} from \"uuid\";\nimport {TodoInput} from \"./components/TodoList/TodoInput/TodoInput\";\nimport {addTaskAC, changeTaskStatusAC, removeTaskAC} from \"./redux/tasks-reducer\";\n\n\n\nfunction App( ) {\n\n    const dispatch = useDispatch();\n\n\n\n\n\n    let todoLists = useSelector<AppRootStateType,Array<TodoListType>>(state => state.todoLists)\n\n\n    let tasks = useSelector<AppRootStateType,TaskStateType>(state => state.tasks)\n\n\n\n    const addTodoList = (title: string) => {\n        dispatch(AddTodoListAC(title))\n    }\n\n    const addTask = (title: string, todoListID:string) => {\n        dispatch(addTaskAC(title,todoListID))\n    }\n\n    const removeTask = (taskID: string,todoListID: string) => {\n        dispatch(removeTaskAC(todoListID,taskID))\n    }\n    const changeTaskStatus = (taskID: string, todoListID:string, isDone: boolean) => {\n        dispatch(changeTaskStatusAC(taskID,todoListID,isDone))\n    }\n\n  return (\n    <div className=\"App\">\n        <TodoInput addItem={addTodoList}/>\n        {todoLists.map(tl => {\n\n            let data = tasks[tl.id]\n            return (\n               <div className=\"todoList\">\n\n                   <TodoList\n                       addTask={addTask}\n                       key={tl.id}\n                       todoID={tl.id}\n                       title={tl.title}\n                       data={data}\n                       removeTask={removeTask}\n                       changeTaskStatus={changeTaskStatus}\n                   />\n\n               </div>\n\n            )\n        })}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoList.tsx",["44","45","46","47","48","49","50"],"import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './TodoList.module.scss';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {TaskStateType, TaskType} from \"../../types/types\";\r\nimport {addTaskAC} from \"../../redux/tasks-reducer\";\r\nimport {TodoInput} from \"./TodoInput/TodoInput\";\r\nimport {TodoTask} from \"./TodoTask/TodoTask\";\r\n\r\ntype TodoListPropsType = {\r\n    title: string\r\n    todoID: string\r\n    addTask: (title: string,todoListID: string) => void\r\n    data: Array<TaskType>\r\n    removeTask:(taskID: string,todoListID: string) => void\r\n}\r\n\r\nexport const TodoList:React.FC<TodoListPropsType> = ({removeTask,data,addTask,todoID,title}) => {\r\n\r\n\r\n\r\n\r\n\r\n    const addTaskCallback = (title: string) => {\r\n         addTask(title,todoID)\r\n    }\r\n\r\n\r\n\r\n    return <div className={classes.todoList}>\r\n            <div>{title}</div>\r\n            <TodoInput addItem={addTaskCallback}/>\r\n        {data.map(el => {\r\n            return <TodoTask\r\n                key={el.id}\r\n                task={el}\r\n                removeTask={removeTask}\r\n                todoListID={todoID}\r\n\r\n            />\r\n        })}\r\n    </div>\r\n\r\n}","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\store.ts",[],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\tasks-reducer.ts",["51"],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\todoList-reducer.ts",[],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoInput\\TodoInput.tsx",[],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoTask\\TodoTask.tsx",["52"],"import React from 'react';\r\nimport classes from './TodoTask.module.scss';\r\nimport {TaskType} from \"../../../types/types\";\r\n\r\ntype TodoTaskPropsType = {\r\n    task: TaskType\r\n    removeTask:(taskID:string,todoListID: string) => void\r\n    todoListID: string\r\n}\r\n\r\nexport const TodoTask:React.FC<TodoTaskPropsType> = ({removeTask, todoListID, task}) => {\r\n\r\n    const deleteCallBack = () => {\r\n        removeTask(task.id,todoListID)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <input checked={task.isDone}  type=\"checkbox\"/>\r\n        <div>{task.title}</div>\r\n        <button onClick={deleteCallBack}>X</button>\r\n    </div>\r\n\r\n}",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":27},{"ruleId":"57","severity":1,"message":"61","line":1,"column":29,"nodeType":"59","messageId":"60","endLine":1,"endColumn":37},{"ruleId":"57","severity":1,"message":"62","line":7,"column":9,"nodeType":"59","messageId":"60","endLine":7,"endColumn":30},{"ruleId":"57","severity":1,"message":"63","line":8,"column":9,"nodeType":"59","messageId":"60","endLine":8,"endColumn":11},{"ruleId":"57","severity":1,"message":"58","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":27},{"ruleId":"57","severity":1,"message":"61","line":1,"column":29,"nodeType":"59","messageId":"60","endLine":1,"endColumn":37},{"ruleId":"57","severity":1,"message":"64","line":3,"column":9,"nodeType":"59","messageId":"60","endLine":3,"endColumn":20},{"ruleId":"57","severity":1,"message":"65","line":3,"column":22,"nodeType":"59","messageId":"60","endLine":3,"endColumn":33},{"ruleId":"57","severity":1,"message":"66","line":4,"column":9,"nodeType":"59","messageId":"60","endLine":4,"endColumn":25},{"ruleId":"57","severity":1,"message":"67","line":5,"column":9,"nodeType":"59","messageId":"60","endLine":5,"endColumn":22},{"ruleId":"57","severity":1,"message":"68","line":6,"column":9,"nodeType":"59","messageId":"60","endLine":6,"endColumn":18},{"ruleId":"57","severity":1,"message":"69","line":2,"column":66,"nodeType":"59","messageId":"60","endLine":2,"endColumn":78},{"ruleId":"57","severity":1,"message":"70","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":15},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'ChangeTodoListTitleAC' is defined but never used.","'v1' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'AppRootStateType' is defined but never used.","'TaskStateType' is defined but never used.","'addTaskAC' is defined but never used.","'TodoListType' is defined but never used.","'classes' is defined but never used.","no-global-assign","no-unsafe-negation"]