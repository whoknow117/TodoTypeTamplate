[{"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\index.tsx":"1","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\App.tsx":"2","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoList.tsx":"3","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\store.ts":"4","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\tasks-reducer.ts":"5","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\todoList-reducer.ts":"6","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoInput\\TodoInput.tsx":"7","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoTask\\TodoTask.tsx":"8","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\common\\SupperInput\\SupperInput.tsx":"9","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\common\\EditableSpan\\EditableSpan.tsx":"10"},{"size":289,"mtime":1610655157563,"results":"11","hashOfConfig":"12"},{"size":2104,"mtime":1610962919164,"results":"13","hashOfConfig":"12"},{"size":1599,"mtime":1610963391366,"results":"14","hashOfConfig":"12"},{"size":407,"mtime":1610793434493,"results":"15","hashOfConfig":"12"},{"size":3088,"mtime":1610961495033,"results":"16","hashOfConfig":"12"},{"size":1360,"mtime":1610832809863,"results":"17","hashOfConfig":"12"},{"size":718,"mtime":1610962167517,"results":"18","hashOfConfig":"12"},{"size":1295,"mtime":1610963278162,"results":"19","hashOfConfig":"12"},{"size":839,"mtime":1610961844779,"results":"20","hashOfConfig":"12"},{"size":848,"mtime":1610963583052,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1e95pwi",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\index.tsx",[],["46","47"],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\App.tsx",["48","49","50"],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoList.tsx",["51","52","53","54","55","56","57"],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\store.ts",[],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\tasks-reducer.ts",["58"],"import {v1} from \"uuid\";\r\nimport {\r\n    ActionsType,\r\n    AddTaskActionType,\r\n    ChangeTaskStatusActionType, ChangeTaskTitleActionType,\r\n    TaskStateType,\r\n    TaskType,\r\n    TodoListType\r\n} from \"../types/types\";\r\n\r\n\r\n\r\n\r\n\r\nlet initialState:TaskStateType =  {\r\n\r\n}\r\n\r\n\r\nexport const removeTaskAC = (todoID: string, taskID: string) => {\r\n    return {\r\n        type: \"REMOVE-TASK\",\r\n        todoID: todoID,\r\n        taskID: taskID\r\n    }\r\n}\r\n\r\nexport const addTaskAC = (title: string, todoListID: string): AddTaskActionType => {\r\n\r\n    return {\r\n        type: \"ADD-TASK\",\r\n        title: title,\r\n        todoListID: todoListID\r\n    }\r\n}\r\nexport const changeTaskStatusAC = (taskID:string, todoListID: string, isDone: boolean): ChangeTaskStatusActionType  => {\r\n\r\n    return {\r\n        type: \"CHANGE-TASK-STATUS\",\r\n        taskID: taskID,\r\n        todoListID: todoListID,\r\n        isDone: isDone\r\n    }\r\n}\r\n\r\nexport const changeTaskTitleAC = (taskID:string, todoListID: string, title: string): ChangeTaskTitleActionType  => {\r\n\r\n    return {\r\n        type: \"CHANGE-TASK-TITLE\",\r\n        taskID: taskID,\r\n        todoListID: todoListID,\r\n        title: title\r\n    }\r\n}\r\n\r\n\r\nexport const tasksReducer = (state = initialState , action:ActionsType):TaskStateType => {\r\n        switch (action.type){\r\n\r\n            case \"CHANGE-TASK-TITLE\": {\r\n\r\n                return {...state,[action.todoListID]: state[action.todoListID].map( t => {\r\n                    if(t.id === action.taskID){\r\n                        return {...t, title: action.title}\r\n                    }\r\n                    return t;\r\n                    })}\r\n            }\r\n\r\n            case \"CHANGE-TASK-STATUS\" : {\r\n                debugger;\r\n                console.log('wtf?')\r\n                return {\r\n                    ...state, [action.todoListID]: state[action.todoListID].map\r\n                    (t => {\r\n                        if (t.id !== action.taskID) return t\r\n                        else return {...t, isDone: action.isDone}\r\n                    })\r\n                }\r\n            }\r\n            case \"REMOVE-TASK\": {\r\n                console.log('RemoveTask')\r\n                return {...state,[action.todoID]: state[action.todoID].filter(t => t.id !== action.taskID)}\r\n            }\r\n            case \"ADD-TODOLIST\" :\r\n                console.log('add-todo')\r\n                console.log(state[action.todoListID])\r\n                const stateCopy = {...state}\r\n                stateCopy[action.todoListID] = [];\r\n                return stateCopy;\r\n\r\n            case \"ADD-TASK\": {\r\n\r\n                console.log('AddTask')\r\n                const copyState = {...state}\r\n                const newTask: TaskType = {\r\n                    id: v1(),\r\n                    title: action.title,\r\n                    isDone: false\r\n                }\r\n                let tasks = copyState[action.todoListID];\r\n                copyState[action.todoListID] = [newTask, ...tasks]\r\n\r\n                return copyState\r\n\r\n            }\r\n\r\n\r\n            default:\r\n                return state;\r\n\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\redux\\todoList-reducer.ts",[],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoInput\\TodoInput.tsx",["59"],"import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './TodoInput.module.scss';\r\nimport SupperInput from \"../../common/SupperInput/SupperInput\";\r\n\r\ntype TodoInputPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const TodoInput:React.FC<TodoInputPropsType> = ({addItem}) => {\r\n\r\n\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    const addItemCallback = () => {\r\n          if(title.trim() !== \"\") {\r\n              addItem(title)\r\n              setTitle(\"\")\r\n          }\r\n\r\n    }\r\n\r\n\r\n\r\n    return <div className={classes.todoInput}>\r\n\r\n        <SupperInput onChangeText={setTitle} value={title}  />\r\n        <button onClick={addItemCallback}>add</button>\r\n\r\n    </div>\r\n\r\n}","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\TodoList\\TodoTask\\TodoTask.tsx",[],"C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\common\\SupperInput\\SupperInput.tsx",["60","61"],"import React, {ChangeEvent, KeyboardEvent,DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport classes from './SupperInput.module.scss';\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperInputPropsType = DefaultInputPropsType & {\r\n    onChangeText?:(value: string) => void\r\n}\r\n\r\nconst SupperInput:React.FC<SuperInputPropsType> = ({\r\n    onChangeText,type,onChange,\r\n    onKeyPress, ...restProps\r\n                                                    }) => {\r\n\r\n\r\n    const onChangeCallback = (e:ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return <input onChange={onChangeCallback} {...restProps} type=\"text\"/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default SupperInput;","C:\\Users\\MOSKO\\OneDrive\\Рабочий стол\\todos\\src\\components\\common\\EditableSpan\\EditableSpan.tsx",["62","63","64","65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"71","severity":1,"message":"75","line":1,"column":29,"nodeType":"73","messageId":"74","endLine":1,"endColumn":37},{"ruleId":"71","severity":1,"message":"76","line":7,"column":9,"nodeType":"73","messageId":"74","endLine":7,"endColumn":30},{"ruleId":"71","severity":1,"message":"72","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"71","severity":1,"message":"75","line":1,"column":29,"nodeType":"73","messageId":"74","endLine":1,"endColumn":37},{"ruleId":"71","severity":1,"message":"77","line":3,"column":9,"nodeType":"73","messageId":"74","endLine":3,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":3,"column":22,"nodeType":"73","messageId":"74","endLine":3,"endColumn":33},{"ruleId":"71","severity":1,"message":"79","line":4,"column":9,"nodeType":"73","messageId":"74","endLine":4,"endColumn":25},{"ruleId":"71","severity":1,"message":"80","line":5,"column":9,"nodeType":"73","messageId":"74","endLine":5,"endColumn":22},{"ruleId":"71","severity":1,"message":"81","line":6,"column":9,"nodeType":"73","messageId":"74","endLine":6,"endColumn":18},{"ruleId":"71","severity":1,"message":"82","line":8,"column":5,"nodeType":"73","messageId":"74","endLine":8,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"71","severity":1,"message":"83","line":1,"column":29,"nodeType":"73","messageId":"74","endLine":1,"endColumn":42},{"ruleId":"71","severity":1,"message":"84","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"71","severity":1,"message":"83","line":1,"column":29,"nodeType":"73","messageId":"74","endLine":1,"endColumn":42},{"ruleId":"71","severity":1,"message":"85","line":1,"column":44,"nodeType":"73","messageId":"74","endLine":1,"endColumn":61},{"ruleId":"71","severity":1,"message":"86","line":1,"column":63,"nodeType":"73","messageId":"74","endLine":1,"endColumn":82},{"ruleId":"71","severity":1,"message":"84","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":15},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'ChangeTodoListTitleAC' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'AppRootStateType' is defined but never used.","'TaskStateType' is defined but never used.","'addTaskAC' is defined but never used.","'TodoListType' is defined but never used.","'KeyboardEvent' is defined but never used.","'classes' is defined but never used.","'DetailedHTMLProps' is defined but never used.","'InputHTMLAttributes' is defined but never used.","no-global-assign","no-unsafe-negation"]